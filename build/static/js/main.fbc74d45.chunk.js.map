{"version":3,"sources":["components/Book.js","components/Shelf.js","components/BooksList.js","BooksAPI.js","components/Search.js","components/NotFound.js","App.js","index.js"],"names":["Book","_ref","book","updateShelf","_jsx","children","_jsxs","className","style","width","height","backgroundImage","concat","imageLinks","thumbnail","onChange","e","target","value","shelf","disabled","id","shelfName","shelfDisplayName","map","title","authors","Shelf","shelfTitle","shelfType","books","booksCategorized","filter","BooksList","Link","to","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","search","query","maxResults","fetch","method","_objectSpread","body","JSON","stringify","then","res","json","data","Search","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","searchBooks","setSearchBooks","handleChange","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","trim","sent","error","t0","console","log","stop","_x","apply","arguments","type","placeholder","length","searchBook","matchedBook","find","homeBook","NotFound","App","setBooks","useEffect","mounted","getBooks","BooksApi","_toConsumableArray","b","Routes","Route","path","element","exact","ReactDOM","render","Router","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbc74d45.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Book = ({ book, updateShelf }) => {\r\n  const shelfs = [\r\n    {\r\n      id: 1,\r\n      shelfName: \"currentlyReading\",\r\n      shelfDisplayName: \"Currently Reading\",\r\n    },\r\n    {\r\n      id: 2,\r\n      shelfName: \"wantToRead\",\r\n      shelfDisplayName: \"Want to Read\",\r\n    },\r\n    {\r\n      id: 3,\r\n      shelfName: \"read\",\r\n      shelfDisplayName: \"Read\",\r\n    },\r\n    {\r\n      id: 4,\r\n      shelfName: \"none\",\r\n      shelfDisplayName: \"None\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <li>\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div\r\n            className=\"book-cover\"\r\n            style={{\r\n              width: 128,\r\n              height: 193,\r\n              backgroundImage: `url(${\r\n                book.imageLinks ? book.imageLinks.thumbnail : \"\"\r\n              })`,\r\n            }}\r\n          ></div>\r\n          <div className=\"book-shelf-changer\">\r\n            <select\r\n              onChange={(e) => updateShelf(book, e.target.value)}\r\n              value={book.shelf ? book.shelf : \"none\"}\r\n            >\r\n              <option value=\"moveTo\" disabled>\r\n                Move to...\r\n              </option>\r\n              {shelfs.map((shelf) => (\r\n                <option key={shelf.id} value={shelf.shelfName}>\r\n                  {shelf.shelfDisplayName}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"book-title\">{book.title}</div>\r\n        <div className=\"book-authors\">{book.authors ? book.authors : \"\"}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nBook.propTypes = {\r\n  book: PropTypes.object.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Book;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Book from \"./Book\";\r\n\r\nconst Shelf = ({ shelfTitle, shelfType, books, updateShelf }) => {\r\n  const booksCategorized = books.filter((book) => book.shelf === shelfType);\r\n\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{shelfTitle}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {booksCategorized.map((book) => (\r\n            <Book key={book.id} book={book} updateShelf={updateShelf} />\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShelf.propTypes = {\r\n  shelfTitle: PropTypes.string.isRequired,\r\n  shelfType: PropTypes.string.isRequired,\r\n  books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Shelf;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Shelf from \"./Shelf\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BooksList = ({ books, updateShelf }) => {\r\n  return (\r\n    <div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n        <h1>MyReads</h1>\r\n      </div>\r\n      <div className=\"list-books-content\">\r\n        <div>\r\n          <Shelf\r\n            shelfTitle=\"Currently Reading\"\r\n            shelfType=\"currentlyReading\"\r\n            books={books}\r\n            updateShelf={updateShelf}\r\n          />\r\n          <Shelf\r\n            shelfTitle=\"Want to Read\"\r\n            shelfType=\"wantToRead\"\r\n            books={books}\r\n            updateShelf={updateShelf}\r\n          />\r\n          <Shelf\r\n            shelfTitle=\"Read\"\r\n            shelfType=\"read\"\r\n            books={books}\r\n            updateShelf={updateShelf}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"open-search\">\r\n        <Link to=\"/search\">Add a book</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBooksList.propTypes = {\r\n  books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BooksList;\r\n","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import { search } from \"../BooksAPI\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Book from \"./Book\";\r\n\r\nconst Search = ({ books, updateShelf }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [searchBooks, setSearchBooks] = useState([]);\r\n\r\n  const handleChange = async (e) => {\r\n    try {\r\n      let value = e.target.value;\r\n      setQuery(value);\r\n      if (value.trim()) {\r\n        const res = await search(value);\r\n        if (res.error) setSearchBooks([]);\r\n        else setSearchBooks(res);\r\n      } else {\r\n        setSearchBooks([]);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-books\">\r\n      <div className=\"search-books-bar\">\r\n        <Link to=\"/\" className=\"close-search\">\r\n          Close\r\n        </Link>\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by title, author, or ISBN\"\r\n            onChange={handleChange}\r\n            value={query}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"search-books-results\">\r\n        <ol className=\"books-grid\">\r\n          {searchBooks.length > 0 &&\r\n            searchBooks.map((searchBook) => {\r\n              const matchedBook = books.find(\r\n                (homeBook) => homeBook.id === searchBook.id\r\n              );\r\n              if (matchedBook) searchBook.shelf = matchedBook.shelf;\r\n              else searchBook.shelf = \"none\";\r\n              return (\r\n                <Book\r\n                  key={searchBook.id}\r\n                  book={searchBook}\r\n                  updateShelf={updateShelf}\r\n                />\r\n              );\r\n            })}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h2>404 Not Found</h2>\r\n      <h3>\r\n        <Link to=\"/\">Home</Link>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport BooksList from \"./components/BooksList\";\r\nimport Search from \"./components/Search\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport * as BooksApi from \"./BooksAPI\";\r\n\r\nfunction App() {\r\n  const [books, setBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const getBooks = async () => {\r\n      const res = await BooksApi.getAll();\r\n      setBooks(res);\r\n    };\r\n\r\n    if (mounted) getBooks();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const updateShelf = (book, shelf) => {\r\n    book.shelf = shelf;\r\n    BooksApi.update(book, shelf).then(() => {\r\n      setBooks([...books.filter((b) => b.id !== book.id), book]);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Routes>\r\n        <Route\r\n          path=\"/search\"\r\n          element={<Search books={books} updateShelf={updateShelf} />}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          element={<BooksList books={books} updateShelf={updateShelf} />}\r\n        />\r\n        <Route path=\"*\" element={<NotFound />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}