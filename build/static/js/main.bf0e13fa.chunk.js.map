{"version":3,"sources":["components/Book.js","components/Shelf.js","components/BooksList.js","BooksAPI.js","components/Search.js","components/NotFound.js","App.js","index.js"],"names":["Book","book","updateShelf","className","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","e","target","value","shelf","disabled","id","shelfName","shelfDisplayName","map","title","authors","Shelf","shelfTitle","shelfType","books","booksCategorized","filter","BooksList","to","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","search","query","maxResults","fetch","method","body","JSON","stringify","then","res","json","data","Search","useState","setQuery","searchBooks","setSearchBooks","handleChange","a","trim","error","console","log","type","placeholder","length","searchBook","matchedBook","find","homeBook","NotFound","App","setBooks","useEffect","mounted","getBooks","BooksApi","b","path","element","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf0e13fa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Book = ({ book, updateShelf }) => {\r\n  const shelfs = [\r\n    {\r\n      id: 1,\r\n      shelfName: \"currentlyReading\",\r\n      shelfDisplayName: \"Currently Reading\",\r\n    },\r\n    {\r\n      id: 2,\r\n      shelfName: \"wantToRead\",\r\n      shelfDisplayName: \"Want to Read\",\r\n    },\r\n    {\r\n      id: 3,\r\n      shelfName: \"read\",\r\n      shelfDisplayName: \"Read\",\r\n    },\r\n    {\r\n      id: 4,\r\n      shelfName: \"none\",\r\n      shelfDisplayName: \"None\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <li>\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div\r\n            className=\"book-cover\"\r\n            style={{\r\n              width: 128,\r\n              height: 193,\r\n              backgroundImage: `url(${\r\n                book.imageLinks ? book.imageLinks.thumbnail : \"\"\r\n              })`,\r\n            }}\r\n          ></div>\r\n          <div className=\"book-shelf-changer\">\r\n            <select\r\n              onChange={(e) => updateShelf(book, e.target.value)}\r\n              value={book.shelf ? book.shelf : \"none\"}\r\n            >\r\n              <option value=\"moveTo\" disabled>\r\n                Move to...\r\n              </option>\r\n              {shelfs.map((shelf) => (\r\n                <option key={shelf.id} value={shelf.shelfName}>\r\n                  {shelf.shelfDisplayName}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"book-title\">{book.title}</div>\r\n        <div className=\"book-authors\">{book.authors ? book.authors : \"\"}</div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nBook.propTypes = {\r\n  book: PropTypes.object.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Book;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Book from \"./Book\";\r\n\r\nconst Shelf = ({ shelfTitle, shelfType, books, updateShelf }) => {\r\n  const booksCategorized = books.filter((book) => book.shelf === shelfType);\r\n\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{shelfTitle}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {booksCategorized.map((book) => (\r\n            <Book key={book.id} book={book} updateShelf={updateShelf} />\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShelf.propTypes = {\r\n  shelfTitle: PropTypes.string.isRequired,\r\n  shelfType: PropTypes.string.isRequired,\r\n  books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Shelf;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Shelf from \"./Shelf\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BooksList = ({ books, updateShelf }) => {\r\n  return (\r\n    <div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n        <h1>MyReads</h1>\r\n      </div>\r\n      <div className=\"list-books-content\">\r\n        <div>\r\n          <Shelf\r\n            shelfTitle=\"Currently Reading\"\r\n            shelfType=\"currentlyReading\"\r\n            books={books}\r\n            updateShelf={updateShelf}\r\n          />\r\n          <Shelf\r\n            shelfTitle=\"Want to Read\"\r\n            shelfType=\"wantToRead\"\r\n            books={books}\r\n            updateShelf={updateShelf}\r\n          />\r\n          <Shelf\r\n            shelfTitle=\"Read\"\r\n            shelfType=\"read\"\r\n            books={books}\r\n            updateShelf={updateShelf}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"open-search\">\r\n        <Link to=\"/search\">Add a book</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBooksList.propTypes = {\r\n  books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BooksList;\r\n","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import { search } from \"../BooksAPI\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Book from \"./Book\";\r\n\r\nconst Search = ({ books, updateShelf }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [searchBooks, setSearchBooks] = useState([]);\r\n\r\n  const handleChange = async (e) => {\r\n    try {\r\n      let value = e.target.value;\r\n      setQuery(value);\r\n      if (value.trim()) {\r\n        const res = await search(value);\r\n        if (res.error) setSearchBooks([]);\r\n        else setSearchBooks(res);\r\n      } else {\r\n        setSearchBooks([]);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-books\">\r\n      <div className=\"search-books-bar\">\r\n        <Link to=\"/\" className=\"close-search\">\r\n          Close\r\n        </Link>\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by title, author, or ISBN\"\r\n            onChange={handleChange}\r\n            value={query}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"search-books-results\">\r\n        <ol className=\"books-grid\">\r\n          {searchBooks.length > 0 &&\r\n            searchBooks.map((searchBook) => {\r\n              const matchedBook = books.find(\r\n                (homeBook) => homeBook.id === searchBook.id\r\n              );\r\n              if (matchedBook) searchBook.shelf = matchedBook.shelf;\r\n              else searchBook.shelf = \"none\";\r\n              return (\r\n                <Book\r\n                  key={searchBook.id}\r\n                  book={searchBook}\r\n                  updateShelf={updateShelf}\r\n                />\r\n              );\r\n            })}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  books: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h2>404 Not Found</h2>\r\n      <h3>\r\n        <Link to=\"/\">Home</Link>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport BooksList from \"./components/BooksList\";\r\nimport Search from \"./components/Search\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport * as BooksApi from \"./BooksAPI\";\r\n\r\nfunction App() {\r\n  const [books, setBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const getBooks = async () => {\r\n      const res = await BooksApi.getAll();\r\n      setBooks(res);\r\n    };\r\n\r\n    if (mounted) getBooks();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const updateShelf = (book, shelf) => {\r\n    book.shelf = shelf;\r\n    BooksApi.update(book, shelf).then(() => {\r\n      setBooks([...books.filter((b) => b.id !== book.id), book]);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Routes>\r\n        <Route\r\n          path=\"/search\"\r\n          element={<Search books={books} updateShelf={updateShelf} />}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          element={<BooksList books={books} updateShelf={updateShelf} />}\r\n        />\r\n        <Route path=\"*\" element={<NotFound />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}